---
test_name: GET /cluster/local/config

marks:
  - base_tests

stages:

  - name: Get cluster config
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/local/config"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - name: !anystr
              node_name: !anystr
              node_type: !anystr
              key: !anystr
              port: !anyint
              bind_addr: !anystr
              nodes: !anything
              hidden: !anystr
              disabled: false
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /cluster/healthcheck

stages:

  - name: Get cluster healtcheck
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/healthcheck"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        nodes_list: 'worker1,worker2'
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - info:
                name: !anystr
                ip: !anystr
                version: !anystr
                type: !anystr
                n_active_agents: !anyint
              status: !anything
            - info:
                name: !anystr
                ip: !anystr
                version: !anystr
                type: !anystr
                n_active_agents: !anyint
              status: !anything
          failed_items: []
          total_affected_items: 2
          total_failed_items: 0

  - name: Get cluster healtcheck
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/healthcheck"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - info:
                name: 'master-node'
                ip: !anystr
                version: !anystr
                type: !anystr
                n_active_agents: !anyint
            - info:
                name: 'worker1'
                ip: !anystr
                version: !anystr
                type: !anystr
                n_active_agents: !anyint
              status: !anything
            - info:
                name: 'worker2'
                ip: !anystr
                version: !anystr
                type: !anystr
                n_active_agents: !anyint
              status: !anything
          failed_items: []
          total_affected_items: 3
          total_failed_items: 0

---
test_name: GET /cluster/local/info

stages:

  - name: Get cluster node
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/local/info"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - cluster: wazuh
              node: master-node
              type: master
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /cluster/nodes

stages:

  - name: Get cluster nodes
    request: &get_cluster_nodes
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/nodes"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: &cluster_nodes_response
            - name: !anystr
              type: !anystr
              version: !anystr
              ip: !anything
          failed_items: []
          total_affected_items: 3
          total_failed_items: 0

  - name: Get cluster nodes
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        limit: 500
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_nodes_response
            - <<: *cluster_nodes_response
            - <<: *cluster_nodes_response
          failed_items: []
          total_affected_items: 3
          total_failed_items: 0

  - name: Filter nodes by query
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        q: version>3;type=worker
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_nodes_response
            - <<: *cluster_nodes_response
          failed_items: []
          total_affected_items: 2
          total_failed_items: 0
        message: !anystr

  - name: Filter nodes by query with non-existent values
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        q: version<3
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items: []
          total_affected_items: 0
          total_failed_items: 0
        message: !anystr

  - name: Retrieve all elements with limit=0
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        limit: 0
    response: &connexion_error
      status_code: 400
      json:
        detail: !anystr
        title: !anystr

  - name: Sort nodes by name in ascending order
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        sort: name
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_nodes_response
              type: master
              name: master-node
            - <<: *cluster_nodes_response
              type: worker
              name: worker1
            - <<: *cluster_nodes_response
              type: worker
              name: worker2
          failed_items: []
          total_affected_items: 3
          total_failed_items: 0

  - name: Sort nodes by name in descending order
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        sort: -name
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_nodes_response
              type: worker
              name: worker2
            - <<: *cluster_nodes_response
              type: worker
              name: worker1
            - <<: *cluster_nodes_response
              type: master
              name: master-node
          failed_items: []
          total_affected_items: 3
          total_failed_items: 0

  - name: Search master
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        search: master
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_nodes_response
              type: master
              name: master-node
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Search worker1
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        search: worker1
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_nodes_response
              name: worker1
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Filters (type) -> master
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        type: master
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_nodes_response
              type: master
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Filters (type) -> worker
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        limit: 1
        type: worker
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_nodes_response
              type: worker
          failed_items: []
          total_affected_items: 2
          total_failed_items: 0


  - name: Filters -> invalid type
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        type: wrong_type
    response:
      <<: *connexion_error

  - name: Select name and version
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        select: name,version
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - name: !anystr
              version: !anystr
            - name: !anystr
              version: !anystr
            - name: !anystr
              version: !anystr
          failed_items: []
          total_affected_items: 3
          total_failed_items: 0

  - name: Select type
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        select: type
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - type: !anystr
            - type: !anystr
            - type: !anystr
          failed_items: []
          total_affected_items: 3
          total_failed_items: 0

  - name: Select wrong_field
    request:
      verify: False
      <<: *get_cluster_nodes
      params:
        select: wrong_field
    response:
      <<: *connexion_error

---
test_name: GET /cluster/nodes

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Get cluster {node_id}
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/nodes"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        nodes_list: "{node_id:s}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - ip: !anystr
              name: !anystr
              type: !anystr
              version: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /cluster/nodes select

marks:
  - parametrize:
      key: field
      vals:
        - ip
        - name
        - type
        - version

stages:

  - name: Get cluster nodes with select
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/nodes"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        nodes_list: "master-node"
        select: "{field}"
    response:
      status_code: 200
      verify_response_with:
        # Check response item keys are the selected keys
        function: tavern_utils:test_select_key_affected_items
        extra_kwargs:
          select_key: "{field:s}"

---
test_name: GET /cluster/status

stages:

  - name: Get cluster status
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/status"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          enabled: "yes"
          running: "yes"

---
test_name: GET /cluster/{node_id}/configuration

stages:

  - name: Request {master-node}
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - alerts: !anything
              auth: !anything
              cis-cat: !anything
              cluster: !anything
              command: !anything
              global: !anything
              localfile: !anything
              osquery: !anything
              remote: !anything
              rootcheck: !anything
              ruleset: !anything
              sca: !anything
              syscheck: !anything
              syscollector: !anything
              vulnerability-detector: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Request (worker)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/worker1/configuration"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - alerts: !anything
              auth: !anything
              cis-cat: !anything
              cluster: !anything
              command: !anything
              global: !anything
              localfile: !anything
              osquery: !anything
              remote: !anything
              rootcheck: !anything
              ruleset: !anything
              sca: !anything
              syscheck: !anything
              syscollector: !anything
              vulnerability-detector: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Filters -> section=alerts (master-node)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        section: alerts
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - alerts:
                email_alert_level: !anystr
                log_alert_level: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0


  - name: Filters -> section=syscheck (master)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        section: syscheck
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - syscheck:
                alert_new_files: !anystr
                auto_ignore: !anything
                directories: !anything
                disabled: !anystr
                frequency: !anystr
                ignore: !anything
                nodiff: !anything
                scan_on_start: !anystr
                skip_nfs: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Filters -> section=syscollector (master)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        section: syscollector
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - syscollector:
                disabled: !anystr
                hardware: !anystr
                interval: !anystr
                network: !anystr
                os: !anystr
                packages: !anystr
                ports : !anything
                processes: !anystr
                scan_on_start: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Filters -> section=alerts (worker1)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/worker1/configuration"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        section: alerts
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - alerts:
                email_alert_level: !anystr
                log_alert_level: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Filters -> section=syscheck (worker1)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/worker1/configuration"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        section: syscheck
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - syscheck:
                alert_new_files: !anystr
                auto_ignore: !anything
                directories: !anything
                disabled: !anystr
                frequency: !anystr
                ignore: !anything
                nodiff: !anything
                scan_on_start: !anystr
                skip_nfs: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Filters -> section=syscollector (worker1)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/worker1/configuration"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        section: syscollector
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - syscollector:
                disabled: !anystr
                hardware: !anystr
                interval: !anystr
                network: !anystr
                os: !anystr
                packages: !anystr
                ports : !anything
                processes: !anystr
                scan_on_start: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /cluster/configuration/validation

stages:

  - name: Request cluster validation
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/configuration/validation"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - name: master-node
              status: 'OK'
            - name: worker1
              status: 'OK'
            - name: worker2
              status: 'OK'
          failed_items: []
          total_affected_items: 3
          total_failed_items: 0

  #### Upload corrupted rules file
  - name: Upload corrupted configuration
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "{corrupted_rules_file}"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/rules/new-rules_corrupted.xml
    response:
      status_code: 200

  - name: Request validation
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/configuration/validation"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - name: worker1
              status: 'OK'
            - name: worker2
              status: 'OK'
          failed_items:
            - error:
                code: 1908
              id:
                - 'master-node'
          total_affected_items: 2
          total_failed_items: 1

    #### Delete corrupted rules file
  - name: Delete rules file
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/rules/new-rules_corrupted.xml
    response:
      status_code: 200
    delay_after: 5

  - name: Request cluster validation
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/configuration/validation"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        nodes_list: 'worker1,worker2'
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - name: worker1
              status: 'OK'
            - name: worker2
              status: 'OK'
          failed_items: []
          total_affected_items: 2
          total_failed_items: 0

  - name: Request cluster validation
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/configuration/validation"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        nodes_list: 'master-node'
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - name: master-node
              status: 'OK'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /cluster/api/config

stages:

  # GET /cluster/api/config
  - name: Get API configuration
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/api/config"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - node_name: "master-node"
              node_api_config: &api_config
                host: !anystr
                port: !anyint
                behind_proxy_server: !anybool
                https:
                  enabled: !anybool
                  key: !anystr
                  cert: !anystr
                  use_ca: !anybool
                  ca: !anystr
                logs:
                  level: !anystr
                  path: !anystr
                cors:
                  enabled: !anybool
                  source_route: !anystr
                  expose_headers: !anystr
                  allow_headers: !anystr
                  allow_credentials: !anybool
                cache:
                  enabled: !anybool
                  time: !anything
                access:
                  max_login_attempts: !anyint
                  block_time: !anyint
                  max_request_per_minute: !anyint
                use_only_authd: !anybool
                drop_privileges: !anybool
                experimental_features: !anybool
            - node_name: "worker1"
              node_api_config:
                <<: *api_config
            - node_name: "worker2"
              node_api_config:
                <<: *api_config
          total_affected_items: 3
          total_failed_items: 0
          failed_items: []

  # GET /cluster/api/config/{node_list}
  - name: Get API configuration
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/api/config"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        nodes_list: 'worker1,worker2'
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - node_name: 'worker1'
              node_api_config:
                <<: *api_config
            - node_name: 'worker2'
              node_api_config:
                <<: *api_config
          total_affected_items: 2
          total_failed_items: 0
          failed_items: []

---
test_name: PUT /cluster/api/config

stages:

  # PUT /cluster/api/config
  - name: Modify API configuration (some fields)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/api/config"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: PUT
      json:
        cache:
          enabled: false
          time: 1
    response:
      status_code: 200
      json: &update_api_config_ok
        error: !anyint
        data:
          affected_items: !anything
          total_affected_items: 3
          total_failed_items: 0
          failed_items: []

  # PUT /cluster/api/config
  - name: Modify API configuration (all allowed fields)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/api/config"
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        nodes_list: 'worker1,worker2'
      method: PUT
      json:
        logs:
          level: "debug"
        cache:
          enabled: true
          time: 3
        access:
          block_time: 0
        use_only_authd: true
        experimental_features: true
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - worker1
            - worker2
          total_affected_items: 2
          total_failed_items: 0
          failed_items: []

  # PUT /cluster/api/config
  - name: Modify API configuration (forbidden field)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/api/config"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: PUT
      json:
        logs:
          path: "test"
    response:
      status_code: 400

  # Restart nodes to apply changes
  - name: Restart cluster
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/restart"
      method: PUT
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
    delay_after: !float "{restart_delay_cluster}"

  # GET /cluster/api/config
  - name: Get API configuration that was set above
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/api/config"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - node_name: 'master-node'
              node_api_config:
                <<: *api_config
            - node_name: 'worker1'
              node_api_config: &modified_api_config
                logs:
                  level: "debug"
                cache:
                  enabled: true
                  time: 3
                use_only_authd: true
                experimental_features: true
            - node_name: 'worker2'
              node_api_config:
                <<: *modified_api_config
          total_affected_items: 3
          total_failed_items: 0
          failed_items: []

---
test_name: DELETE /cluster/api/config

stages:

  # DELETE /cluster/api/config (worker1)
  - name: Restore API configuration
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/api/config"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        nodes_list: 'worker1'
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: !anything
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []

  # Restart nodes to apply changes
  - name: Restart cluster
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/restart"
      method: PUT
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
    delay_after: !float "{restart_delay_cluster}"

  # GET /cluster/api/config
  - name: Get API default configuration
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/api/config"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - node_name: 'master-node'
              node_api_config:
                <<: *api_config
            - node_name: 'worker1'
              node_api_config:
                logs:
                  level: "info"
                cache:
                  enabled: true
                  time: 0.75
                use_only_authd: false
                experimental_features: false
            - node_name: 'worker2'
              node_api_config:
                <<: *modified_api_config
          total_affected_items: 3
          total_failed_items: 0
          failed_items: []

  # DELETE /cluster/api/config (all nodes)
  - name: Restore API configuration
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/api/config"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: !anything
          total_affected_items: 3
          total_failed_items: 0
          failed_items: []

  # Restart nodes to apply changes
  - name: Restart cluster
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/restart"
      method: PUT
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
    delay_after: !float "{restart_delay_cluster}"

  # GET /cluster/api/config
  - name: Get API default configuration
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/api/config"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - node_name: 'master-node'
              node_api_config:
                <<: *api_config
            - node_name: 'worker1'
              node_api_config:
                <<: *api_config
            - node_name: 'worker2'
              node_api_config:
                <<: *api_config
          total_affected_items: 3
          total_failed_items: 0
          failed_items: []

---
test_name: GET /cluster/{node_id}/configuration/{component}/{configuration}

stages:

  - name: Try to show the config of analisys/global through a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/worker1/configuration/analysis/global"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - global:
                alerts_log: !anystr
                email_notification: !anystr
                host_information: !anyint
                integrity_checking: !anyint
                jsonout_output: !anystr
                logall: !anystr
                logall_json: !anystr
                max_output_size: !anyint
                memory_size: !anyint
                prelude_output: !anystr
                rootkit_detection: !anyint
                rotate_interval: !anyint
                stats: !anyint
                white_list: !anything
                zeromq_output: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of analysis/active_response through a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/analysis/active_response"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - active-response: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of analysis/alerts through a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/worker1/configuration/analysis/alerts"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - alerts: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show analysis/command through a worker

    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/analysis/command"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - command: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of authd/authd in the manager through a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/auth/auth"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - auth:
                ciphers: !anystr
                disabled: !anystr
                force_insert: !anystr
                force_time: !anystr
                port: !anyint
                purge: !anystr
                ssl_auto_negotiate: !anystr
                ssl_manager_cert: !anystr
                ssl_manager_key: !anystr
                use_password: !anystr
                use_source_ip: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of com/internal in the manager through a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/com/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - internal:
                execd:
                  max_restart_lock: !anyint
                  request_timeout: !anyint
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of analysis/internal through a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/worker1/configuration/analysis/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - internal:
                analysisd:
                  debug: !anyint
                  decoder_order_size: !anyint
                  default_timeframe: !anyint
                  fts_list_size: !anyint
                  fts_min_size_for_str: !anyint
                  label_cache_maxage: !anyint
                  log_fw: !anyint
                  min_rotate_interval: !anyint
                  rlimit_nofile: !anyint
                  show_hidden_labels: !anyint
                  stats_maxdiff: !anyint
                  stats_mindiff: !anyint
                  stats_percent_diff: !anyint
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of logcollector/localfile in the manager trough a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/logcollector/localfile"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - localfile: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of logcollector/socket in the manager trough a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/logcollector/socket"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items: []
          total_affected_items: 0
          total_failed_items: 0

  - name: Try to show the config of logcollector/internal in the manager trough a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/logcollector/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - internal:
                logcollector:
                  debug: !anyint
                  force_reload: !anyint
                  input_threads: !anyint
                  loop_timeout: !anyint
                  max_files: !anyint
                  max_lines: !anyint
                  open_attempts: !anyint
                  queue_size: !anyint
                  reload_delay: !anyint
                  reload_interval: !anyint
                  remote_commands: !anyint
                  rlimit_nofile: !anyint
                  sample_log_length: !anyint
                  sock_fail_time: !anyint
                  vcheck_files: !anyint
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of monitor/internal in the manager trough a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/monitor/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - monitord:
                compress: !anyint
                daily_rotations: !anyint
                day_wait: !anyint
                delete_old_agents: !anyint
                keep_log_days: !anyint
                monitor_agents: !anyint
                rotate_log: !anyint
                sign: !anyint
                size_rotate: !anyint
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of request/remote in the manager trough a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/request/remote"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - remote:
              - connection: !anystr
                ipv6: !anystr
                port: !anystr
                protocol: !anystr
                queue_size: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of request/internal in the manager trough a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/request/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - internal:
                remoted:
                  buffer_relax: !anyint
                  comp_average_printout: !anyint
                  group_data_flush: !anyint
                  guess_agent_group: !anyint
                  max_attempts: !anyint
                  merge_shared: !anyint
                  pass_empty_keyfile: !anyint
                  receive_chunk: !anyint
                  recv_counter_flush: !anyint
                  recv_timeout: !anyint
                  request_pool: !anyint
                  request_rto_msec: !anyint
                  request_rto_sec: !anyint
                  request_timeout: !anyint
                  response_timeout: !anyint
                  rlimit_nofile: !anyint
                  sender_pool: !anyint
                  shared_reload: !anyint
                  tcp_keepcnt: !anyint
                  tcp_keepidle: !anyint
                  tcp_keepintvl: !anyint
                  verify_msg_id: !anyint
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of syscheck/syscheck in the manager trough a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/syscheck/syscheck"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - syscheck:
                directories: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of syscheck/rootcheck in the manager trough a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/syscheck/rootcheck"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - rootcheck:
                base_directory: !anything
                check_dev: !anystr
                check_files: !anystr
                check_if: !anystr
                check_pids: !anystr
                check_ports: !anystr
                check_sys: !anystr
                check_trojans: !anystr
                check_unixaudit: !anystr
                disabled: !anystr
                frequency: !anyint
                rootkit_files: !anystr
                rootkit_trojans: !anystr
                scanall: !anystr
                skip_nfs: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of syscheck/internal in the manager through a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/syscheck/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - internal:
                rootcheck:
                  sleep: !anyint
                syscheck:
                  debug: !anyint
                  default_max_depth: !anyint
                  file_max_size: !anyint
                  max_audit_entries: !anyint
                  rt_delay: !anyint
                  symlink_scan_interval: !anyint
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of wmodules/wmodules in the manager trough a worker
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/master-node/configuration/wmodules/wmodules"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - wmodules: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /cluster/{node_id}/files

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Get ossec.conf {node_id}
    request: &get_cluster_files
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/ossec.conf
    response:
      status_code: 200
      json:
        contents: !anything

  - name: Get local rules {node_id}
    request:
      verify: False
      <<: *get_cluster_files
      params:
        path: etc/rules/local_rules.xml
    response:
      status_code: 200
      json:
        contents: !anything

  - name: Get rules {node_id}
    request:
      verify: False
      <<: *get_cluster_files
      params:
        path: ruleset/rules/0350-amazon_rules.xml
    response:
      status_code: 200
      json:
        contents: !anything

  - name: Get local decoder {node_id}
    request:
      verify: False
      <<: *get_cluster_files
      params:
        path: etc/decoders/local_decoder.xml
    response:
      status_code: 200
      json:
        contents: !anything

  - name: Get decoder {node_id}
    request:
      verify: False
      <<: *get_cluster_files
      params:
        path: ruleset/decoders/0005-wazuh_decoders.xml
    response:
      status_code: 200
      json:
        contents: !anything

  - name: Get CDB list {node_id}
    request:
      verify: False
      <<: *get_cluster_files
      params:
        path: etc/lists/audit-keys
    response:
      status_code: 200
      json:
        contents: !anything

  - name: Get file with wrong path (master)
    request:
      verify: False
      <<: *get_cluster_files
      params:
        path: wrong_path/file.xml
    response:
      <<: *connexion_error

  - name: Get file with empty path (master)
    request:
      verify: False
      <<: *get_cluster_files
      params:
        path: ''
    response:
      <<: *connexion_error

---
test_name: DELETE /cluster/{node_id}/files

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Delete rules file
    request: &delete_cluster_files
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/files"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/rules/local_rules.xml
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/rules/local_rules.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Delete unexisting rules file
    request:
      verify: False
      <<: *delete_cluster_files
      params:
        path: etc/rules/local-rules.xml
    response: &non_existing_file
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1906
              id: !anything
          total_affected_items: 0
          total_failed_items: 1

  - name: Delete decoder file
    request:
      verify: False
      <<: *delete_cluster_files
      params:
        path: etc/decoders/local_decoder.xml
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/decoders/local_decoder.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Delete unexisting decoder file
    request:
      verify: False
      <<: *delete_cluster_files
      params:
        path: etc/decoders/local-decoder.xml
    response:
      <<: *non_existing_file

  - name: Delete CDB list file
    request:
      verify: False
      <<: *delete_cluster_files
      params:
        path: etc/lists/audit-keys
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/lists/audit-keys'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Delete unexisting CDB list file
    request:
      verify: False
      <<: *delete_cluster_files
      params:
        path: etc/lists/wrong_list
    response:
      <<: *non_existing_file

---
test_name: PUT /cluster/{node_id}/files

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  #### Save ossec.conf
  - name: Get ossec.conf {node_id}
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/ossec.conf
    response:
      save:
        json:
          ossec_conf: contents
      status_code: 200
      json:
        error: 0
        contents: !anystr

  - name: Upload ossec.conf {node_id}
    request: &upload_cluster_files
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/files"
      method: PUT
      data: "{ossec_conf}"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        overwrite: True
        path: etc/ossec.conf
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/ossec.conf'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Upload new rules {node_id}
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_rules:s}"
      params:
        path: etc/rules/new-rules.xml
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/rules/new-rules.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Upload rules (overwrite=false) {node_id}
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_rules:s}"
      params:
        path: etc/rules/new-rules.xml
        overwrite: False
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1905
              id:
                - 'etc/rules/new-rules.xml'
          total_affected_items: 0
          total_failed_items: 1

  - name: Upload rules (overwrite=true) {node_id}
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_rules:s}"
      params:
        path: etc/rules/new-rules.xml
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/rules/new-rules.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Upload rules with XML syntax error (overwrite=true)
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_rules_with_syntax_error:s}"
      params:
        path: etc/rules/new-rules.xml
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1113
              id:
                - 'etc/rules/new-rules.xml'
          total_affected_items: 0
          total_failed_items: 1

  - name: Upload new decoder
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_decoder:s}"
      params:
        path: etc/decoders/new-decoder.xml
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/decoders/new-decoder.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Upload decoder (overwrite=false)
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_decoder:s}"
      params:
        path: etc/decoders/new-decoder.xml
        overwrite: False
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1905
              id:
                - 'etc/decoders/new-decoder.xml'
          total_affected_items: 0
          total_failed_items: 1

  - name: Upload decoder (overwrite=true)
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_decoder:s}"
      params:
        path: etc/decoders/new-decoder.xml
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/decoders/new-decoder.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Upload decoder with XML syntax error (overwrite=true)
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_decoder_with_syntax_error:s}"
      params:
        path: etc/decoders/new-decoder.xml
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1113
              id:
                - 'etc/decoders/new-decoder.xml'
          total_affected_items: 0
          total_failed_items: 1

  - name: Upload new CDB list
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_cdb_list:s}"
      params:
        path: etc/lists/new-list
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/lists/new-list'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Upload CDB list (overwrite=false)
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_cdb_list:s}"
      params:
        path: etc/lists/new-list
        overwrite: False
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1905
              id:
                - 'etc/lists/new-list'
          total_affected_items: 0
          total_failed_items: 1

  - name: Upload CDB list (overwrite=true)
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_cdb_list:s}"
      params:
        path: etc/lists/new-list
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/lists/new-list'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Upload CDB list with a syntax error (overwrite=true)
    request:
      verify: False
      <<: *upload_cluster_files
      data: "{new_cdb_list_with_syntax_error:s}"
      params:
        path: etc/lists/new-list
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1800
              id:
                - 'etc/lists/new-list'
          total_affected_items: 0
          total_failed_items: 1

---
test_name: PUT /cluster/wrong_node/files

stages:

  - name: Upload rules to unexisting node (overwrite=false) {node_id}
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/unexisting-node/files"
      method: PUT
      data: "{new_rules:s}"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/rules/new-rules.xml
        overwrite: True
    response: &unexisting_node
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          total_affected_items: 0
          total_failed_items: 1
          failed_items:
            - error:
                code: 1730
              id:
                - "unexisting-node"

  - name: Upload decoder to unexisting node
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/unexisting-node/files"
      method: PUT
      data: "{new_decoder:s}"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/decoders/new-decoder.xml
        overwrite: True
    response:
      <<: *unexisting_node

  - name: Upload CDB list to unexisting node
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/unexisting-node/files"
      method: PUT
      data: "{new_cdb_list:s}"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/lists/new-list
        overwrite: False
    response:
      <<: *unexisting_node

---
test_name: GET /cluster/{node_id}/info

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Request {node_id} 0
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/info"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - path: !anystr
              version: !anystr
              compilation_date: !anystr
              type: !anystr
              max_agents: !anystr
              openssl_support: !anystr
              ruleset_version: !anystr
              tz_offset: !anystr
              tz_name: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /cluster/{node_id}/logs

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Request {node_id} 1
    request: &get_cluster_logs
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/logs"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: !anything
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Filters -> limit=3 {node_id}
    request:
      verify: False
      <<: *get_cluster_logs
      params:
        limit: 3
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - &cluster_log
              description: !anystr
              level: !anystr
              tag: !anystr
              timestamp: !anystr
            - <<: *cluster_log
            - <<: *cluster_log
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Filters -> limit=4 {node_id}
    request:
      verify: False
      <<: *get_cluster_logs
      params:
        limit: 4
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_log
            - <<: *cluster_log
            - <<: *cluster_log
            - <<: *cluster_log
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Filters -> limit=2, sort=tag {node_id}
    request:
      verify: False
      <<: *get_cluster_logs
      params:
        limit: 2
        sort: tag
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_log
            - <<: *cluster_log
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Filters -> limit=1, sort=-level {node_id}
    request:
      verify: False
      <<: *get_cluster_logs
      params:
        limit: 1
        sort: -level
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_log
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Filters -> offset=2, limit=3 {node_id}
    request:
      verify: False
      <<: *get_cluster_logs
      params:
        limit: 3
        offset: 2
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_log
            - <<: *cluster_log
            - <<: *cluster_log
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Filters -> offset=5, limit=2 {node_id}
    request:
      verify: False
      <<: *get_cluster_logs
      params:
        limit: 2
        offset: 5
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_log
            - <<: *cluster_log
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Filters -> tag=ossec-analysisd, limit=1 {node_id}
    request:
      verify: False
      <<: *get_cluster_logs
      params:
        tag: ossec-analysisd
        limit: 1
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_log
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Filters -> tag=ossec-syscheckd, limit=2 {node_id}
    request:
      verify: False
      <<: *get_cluster_logs
      params:
        tag: ossec-syscheckd
        limit: 2
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_log
              tag: ossec-syscheckd
            - <<: *cluster_log
              tag: ossec-syscheckd
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Filters -> level=info, limit=1 {node_id}
    request:
      verify: False
      <<: *get_cluster_logs
      params:
        level: info
        limit: 1
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - <<: *cluster_log
              level: info
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Filters by query (tag=ossec-syscheckd, level=info)
    request:
      verify: False
      <<: *get_cluster_logs
      params:
        q: tag=ossec-syscheckd;level=info
    response:
      status_code: 200
      verify_response_with:
        - function: tavern_utils:test_expected_value
          extra_kwargs:
            key: "tag"
            expected_values: "ossec-syscheckd"
        - function: tavern_utils:test_expected_value
          extra_kwargs:
            key: "level"
            expected_values: "info"

---
test_name: GET /cluster/{node_id}/logs/summary

marks:
  - parametrize:
      key: node_id
      vals:
        - worker1
        - worker2

stages:

  - name: Request {node_id} 2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/logs/summary"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: !anything
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0
        message: !anystr

---
test_name: GET /cluster/{node_id}/stats

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Cluster stats {node_id} today
    request: &get_cluster_stats
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/stats"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 400
      json:
        error: 1308

  - name: Cluster stats {node_id} 2019-08-27
    request:
      verify: False
      <<: *get_cluster_stats
      params:
        date: "2019-08-27"
    response:
      status_code: 200
      json:
        error: !anyint
        data: !anything

  - name: Cluster stats {node_id} day without stats
    request:
      verify: False
      <<: *get_cluster_stats
      params:
        date: "1970-01-01"
    response:
      status_code: 400
      json:
        error: 1308

---
test_name: GET /cluster/wrong_node/stats

stages:

  - name: unexisting_node stats
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/unexisting-node/stats"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      <<: *unexisting_node

---
test_name: GET /cluster/{node_id}/stats/analysisd

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Analysisd stats {node_id}
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/stats/analysisd"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - total_events_decoded: !anyfloat
              syscheck_events_decoded: !anyfloat
              syscheck_edps: !anyfloat
              syscollector_events_decoded: !anyfloat
              syscollector_edps: !anyfloat
              rootcheck_events_decoded: !anyfloat
              rootcheck_edps: !anyfloat
              sca_events_decoded: !anyfloat
              sca_edps: !anyfloat
              hostinfo_events_decoded: !anyfloat
              hostinfo_edps: !anyfloat
              winevt_events_decoded: !anyfloat
              winevt_edps: !anyfloat
              other_events_decoded: !anyfloat
              other_events_edps: !anyfloat
              events_processed: !anyfloat
              events_edps: !anyfloat
              events_received: !anyfloat
              events_dropped: !anyfloat
              alerts_written: !anyfloat
              firewall_written: !anyfloat
              fts_written: !anyfloat
              syscheck_queue_usage: !anyfloat
              syscheck_queue_size: !anyfloat
              syscollector_queue_usage: !anyfloat
              syscollector_queue_size: !anyfloat
              rootcheck_queue_usage: !anyfloat
              rootcheck_queue_size: !anyfloat
              sca_queue_usage: !anyfloat
              sca_queue_size: !anyfloat
              hostinfo_queue_usage: !anyfloat
              hostinfo_queue_size: !anyfloat
              winevt_queue_usage: !anyfloat
              winevt_queue_size: !anyfloat
              event_queue_usage: !anyfloat
              event_queue_size: !anyfloat
              rule_matching_queue_usage: !anyfloat
              rule_matching_queue_size: !anyfloat
              alerts_queue_usage: !anyfloat
              alerts_queue_size: !anyfloat
              firewall_queue_usage: !anyfloat
              firewall_queue_size: !anyfloat
              statistical_queue_usage: !anyfloat
              statistical_queue_size: !anyfloat
              archives_queue_usage: !anyfloat
              archives_queue_size: !anyfloat
          total_affected_items: 1
          failed_items: []
          total_failed_items: 0

---
test_name: GET /cluster/{node_id}/stats/hourly

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Hourly node stats {node_id}
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/stats/hourly"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - averages: !anything
              interactions: !anyint
          total_affected_items: 1
          failed_items: []
          total_failed_items: 0

---
test_name: GET /cluster/{node_id}/stats/remoted

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Remoted stats {node_id}
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/stats/remoted"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - queue_size: !anyfloat
              total_queue_size: !anyfloat
              tcp_sessions: !anyfloat
              evt_count: !anyfloat
              ctrl_msg_count: !anyfloat
              discarded_count: !anyfloat
              msg_sent: !anyfloat
              recv_bytes: !anyfloat
          total_affected_items: 1
          failed_items: []
          total_failed_items: 0

---
test_name: GET /cluster/{node_id}/stats/weekly

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Weekly node stats {node_id}
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/stats/weekly"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - Sun:
                hours: !anything
                interactions: !anyint
            - Mon:
                hours: !anything
                interactions: !anyint
            - Tue:
                hours: !anything
                interactions: !anyint
            - Wed:
                hours: !anything
                interactions: !anyint
            - Thu:
                hours: !anything
                interactions: !anyint
            - Fri:
                hours: !anything
                interactions: !anyint
            - Sat:
                hours: !anything
                interactions: !anyint
          total_affected_items: 7
          failed_items: []
          total_failed_items: 0

---
test_name: GET /cluster/{node_id}/status

marks:
  - parametrize:
      key: node_id
      vals:
        - master-node
        - worker1
        - worker2

stages:

  - name: Request {node_id} 3
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/{node_id}/status"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: !anything
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

---
test_name: PUT /cluster/restart

stages:

  - name: Restart cluster
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/restart"
      method: PUT
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        nodes_list: 'worker1,worker2'
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'worker1'
            - 'worker2'
          failed_items: []
          total_affected_items: 2
          total_failed_items: 0
    delay_after: !float "{restart_delay_cluster}"

  - name: Restart cluster
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/cluster/restart"
      method: PUT
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'master-node'
            - 'worker1'
            - 'worker2'
          failed_items: []
          total_affected_items: 3
          total_failed_items: 0
