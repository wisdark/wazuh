test_name: GET /sca/{agent_id} for agents with Wazuh version >=4.2.0 (001) and <4.2.0 (006)

marks:
  - base_tests

stages:

  # Testing GET /sca/001
  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: 0
        data: !anything

  - name: Parameters -> limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - &sca_agent_result_001
              name: !anystr
              pass: !anyint
              score: !anyint
              references: !anystr #THIS FIELD IS NOT INCLUDED IN ALL ANSWERS
              fail: !anyint
              description: !anystr
              policy_id: !anystr
              start_scan: !anystr
              end_scan: !anystr
              hash_file: !anystr
              total_checks: !anyint
              invalid: !anyint
          total_affected_items: 1
          failed_items: []
          total_failed_items: 0
      save:
        json:
          expected_name: data.affected_items[0].name
          expected_description: data.affected_items[0].description

  - name: Parameters -> offset=1,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        offset: 1
        limit: 1
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items: []
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Parameters -> search=cis,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        search: cis
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_agent_result_001
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Parameters -> q=score>0,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        q: score>0
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_agent_result_001
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Parameters -> limit=999999
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 999999
    response:
      status_code: 400

  - name: Parameters -> references=https://www.cisecurity.org/cis-benchmarks/, limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        references: https://www.cisecurity.org/cis-benchmarks/
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_agent_result_001
              references: https://www.cisecurity.org/cis-benchmarks/
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Parameters -> description,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        description: "{expected_description:s}"
        limit: 1
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_agent_result_001
              description: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Parameters -> name=CIS Benchmark for Debian/Linux 9, limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        name: "{expected_name:s}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_agent_result_001
              name: "{expected_name:s}"
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Parameters -> sort=-score,limit=10
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 10
        sort: -score
    response:
      status_code: 200
      verify_response_with:
        - function: tavern_utils:test_sort_response
          extra_kwargs:
            key: "score"
            reverse: True

  # Testing GET /sca/006
  - name: Parameters -> limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/006"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - &sca_agent_result_006
              name: !anystr
              pass: !anyint
              score: !anyint
              references: !anystr #THIS FIELD IS NOT INCLUDED IN ALL ANSWERS
              fail: !anyint
              description: !anystr
              policy_id: !anystr
              start_scan: !anystr
              end_scan: !anystr
              hash_file: !anystr
              total_checks: !anyint
              invalid: !anyint
            - <<: *sca_agent_result_006
          total_affected_items: 2
          failed_items: []
          total_failed_items: 0
      save:
        json:
          expected_name: data.affected_items[0].name
          expected_description: data.affected_items[0].description

  - name: Parameters -> offset=1,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/006"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        offset: 1
        limit: 1
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_agent_result_006
          failed_items: []
          total_affected_items: 2
          total_failed_items: 0

  - name: Parameters -> search=cis,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/006"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        search: cis
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_agent_result_006
          failed_items: []
          total_affected_items: 2
          total_failed_items: 0

  - name: Parameters -> q=score>0,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/006"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        q: score>0
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_agent_result_006
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Parameters -> limit=999999
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/006"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 999999
    response:
      status_code: 400

  - name: Parameters -> references=https://www.cisecurity.org/cis-benchmarks/, limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/006"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        references: https://www.cisecurity.org/cis-benchmarks/
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_agent_result_006
              references: https://www.cisecurity.org/cis-benchmarks/
          failed_items: []
          total_affected_items: 2
          total_failed_items: 0

  - name: Parameters -> description,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/006"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        description: "{expected_description:s}"
        limit: 1
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_agent_result_006
              description: !anystr
          failed_items: []
          total_affected_items: 2
          total_failed_items: 0

  - name: Parameters -> sort=-score,limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/006"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
        sort: -score
    response:
      verify_response_with:
        - function: tavern_utils:test_sort_response
          extra_kwargs:
            key: "score"
            reverse: True
      status_code: 200

  - name: Parameters -> sort=+score,limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/006"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
        sort: +score
    response:
      verify_response_with:
        - function: tavern_utils:test_sort_response
          extra_kwargs:
            key: "score"
      status_code: 200

---
test_name: GET /sca/001/checks/{policy}

stages:
  - name: Parameter policy
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
    response:
      status_code: 200
      save:
        json:
          sca_policy_id: data.affected_items[0].policy_id

  - name: Obtain parameter values 1/2 (parameters are obtained in two steps as there is not any response with all the parameters at once)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        q: "file~a;status~a;remediation~a"  # Assert that the response will have all the fields
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - &sca_check_result_001
              remediation: !anystr
              rationale: !anystr
              title: !anystr
              policy_id: !anystr
              description: !anystr
              id: !anyint
              result: !anystr
              compliance: !anything
              rules: !anything
              condition: !anything
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0
      save:
        json:
          expected_check_id: data.affected_items[0].id
          expected_result: data.affected_items[0].result
          expected_title: data.affected_items[0].title
          expected_description: data.affected_items[0].description
          expected_rationale: data.affected_items[0].rationale
          expected_status: data.affected_items[0].status
          expected_reason: data.affected_items[0].reason
          expected_file: data.affected_items[0].file
          expected_remediation: data.affected_items[0].remediation

  - name: Obtain parameter values 2/2 (parameters are obtained in two steps as there is not any response with all the parameters at once)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        q: "command~a"  # Assert that the response will have all the fields
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items: !anything
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0
      save:
        json:
          expected_command: data.affected_items[0].command

  - name: Parameters -> limit=4
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 4
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_check_result_001
            - <<: *sca_check_result_001
            - <<: *sca_check_result_001
            - <<: *sca_check_result_001
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Parameters -> sort=-id,limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
        sort: -id
    response:
      verify_response_with:
        - function: tavern_utils:test_sort_response
          extra_kwargs:
            key: "id"
            reverse: True
      status_code: 200

  - name: Parameters -> search,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        search: passwd
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_check_result_001
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Parameters -> q=id
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        q: "id={expected_check_id}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_check_result_001
              id: !int "{expected_check_id}"
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Parameters -> result,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        result: "{expected_result:s}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_check_result_001
              result: "{expected_result:s}"
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Parameters -> file,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        file: "{expected_file:s}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_check_result_001
              file: "{expected_file:s}"
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Parameters -> limit=999999
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 999999
    response:
      status_code: 400

  - name: Parameters -> title,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        title: "{expected_title:s}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          affected_items:
            - <<: *sca_check_result_001
              title: "{expected_title:s}"
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

  - name: Parameters -> title="non-existent"
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        title: non-existent
    response:
      status_code: 200
      json:
        error: 0
        data:
          total_affected_items: 0
          affected_items: []
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> description,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        description: "{expected_description:s}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          total_affected_items: !anyint
          affected_items:
            - description: "{expected_description:s}"
          failed_items: []
          total_failed_items: 0
        message: !anystr

  - name: Parameters -> remediation,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        remediation: "{expected_remediation:s}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          total_affected_items: !anyint
          affected_items:
            - remediation: "{expected_remediation:s}"
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> rationale,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        rationale: "{expected_rationale:s}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          total_affected_items: !anyint
          affected_items:
            - rationale: "{expected_rationale:s}"
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> command,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        command: "{expected_command:s}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          total_affected_items: !anyint
          affected_items:
            - command: "{expected_command:s}"
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> status,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        status: "{expected_status:s}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          total_affected_items: !anyint
          affected_items:
            - status: "{expected_status:s}"
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> reason,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/sca/001/checks/{sca_policy_id:s}"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        reason: "{expected_reason:s}"
    response:
      status_code: 200
      json:
        error: 0
        data:
          total_affected_items: !anyint
          affected_items:
            - reason: "{expected_reason:s}"
          failed_items: []
          total_failed_items: 0
