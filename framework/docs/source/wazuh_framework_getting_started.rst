.. Copyright (C) 2015-2020, Wazuh Inc.

.. _wazuh_framework_getting_started:

Getting Started
======================

This guide gives a good introduction to the Wazuh Framework. It assumes you already have it installed. If you do not, head over to the :ref:`installation section <wazuh_framework_installation>`.

A Minimal Application
------------------------
The following code shows how to get the files modified in the agent 000 (Manager). Remember to activate the virtual environment.

::

    #!/usr/bin/env python
    import json
    import wazuh.syscheck as syscheck

    myFiles = syscheck.files(agent_id='000', event='modified', limit=1)
    print(json.dumps(myFiles['items'], indent=4, sort_keys=True))

::

    [
        {
            "event": "modified",
            "file": "/etc/ld.so.cache",
            "gid": 0,
            "group": "root",
            "inode": 282738,
            "md5": "474afe6dad4af6a30a82921ead304cd5",
            "modificationDate": "2016-08-10 09:39:04",
            "octalMode": "100644",
            "permissions": "-rw-r--r--",
            "scanDate": "2016-08-10 09:45:19",
            "sha1": "8473a0e167a616d9980b32208e627aa46015ddfc",
            "size": 19289,
            "uid": 0,
            "user": "root"
        }
    ]

The example should work with a default installation. In case you do not have OSSEC installed in the default directory, you can use the Wazuh object to specify where is it.

::

    #!/usr/bin/env python
    import json
    import wazuh.syscheck as syscheck
    from wazuh import Wazuh

    # It is possible to specify the ossec path (path argument) or get the values from /etc/ossec-init.conf (get_init argument)
    myWazuh = Wazuh(get_init=True)
    #myWazuh = Wazuh(path='/var/ossec')

    myFiles = syscheck.files(agent_id='000', event='modified', limit=1)
    print(json.dumps(myFiles['items'], indent=4, sort_keys=True))


Error Handling
------------------------
The next code snnipet adds an agent to OSSEC with name 'WazuhTestAgent' and IP 'ANY'.

::

    #!/usr/bin/env python
    import json
    from sys import exit
    from wazuh.agent import Agent
    from wazuh.exception import WazuhException

    agent = Agent()

    try:
        agent_id = agent.add('WazuhTestAgent', 'Any')
    except WazuhException as e:
        print("Error {0}: {1}.".format(e.code, e.message))
        exit(1)

    agent_key = agent.get_key()
    print("\nAgent added with:\n\tID: {0}\n\tKey: {1}".format(agent_id, agent_key))

    agent.get()  # Load information generated by OSSEC
    print("\nAgent info:")
    print(json.dumps(agent.to_dict(), indent=4, sort_keys=True))

::

    Agent added with:
        ID: 070
        Key: MDcwIFdhenVoVGVzdEFnZW50IGFueSA5MjdlNTVhYTJjYWQwMGI3MjU1YmVhYmMzYzc1M2UxY2M2ODhiNjFmOTIxZTA2N2M5MDBiZjhkYTMwNmI1YWQz

    Agent info:
    {
        "id": "070",
        "ip": "any/any",
        "lastKeepAlive": "Unknown",
        "name": "WazuhTestAgent",
        "os": "Unknown",
        "rootcheckEndTime": "Unknown",
        "rootcheckTime": "Unknown",
        "status": "Never connected",
        "syscheckEndTime": "Unknown",
        "syscheckTime": "Unknown",
        "version": "Unknown"
    }

We use WazuhException to handle errors related to Wazuh. In this case, if we run the above code twice we get an error:

::

    Error 75: Name already present.

Check the :ref:`reference <wazuh_framework_reference>` to discover the full potential of the framework.
