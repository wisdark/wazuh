#!/usr/bin/env python
# Copyright (C) 2015-2021, Wazuh Inc.
# Created by Wazuh, Inc. <info@wazuh.com>.
# This program is a free software; you can redistribute it and/or modify it under the terms of GPLv2

import os
from unittest.mock import ANY, patch

with patch('wazuh.core.common.wazuh_uid'):
    with patch('wazuh.core.common.wazuh_gid'):
        from wazuh.core.vulnerability import *


test_data_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'data', 'test_agent')


@patch("wazuh.core.vulnerability.WazuhDBBackend")
@patch("wazuh.core.agent.WazuhDBQuery.__init__")
@patch('wazuh.core.wdb.WazuhDBConnection._send')
@patch('wazuh.core.agent.Agent.get_basic_information')
@patch('socket.socket.connect')
def test_WazuhDBQueryVulnerability__init__(mock_conn, mock_info, mock_send, mock_wazuhDBQuery, mock_backend):
    """Test if method __init__ of WazuhDBQueryVulnerability calls WazuhDBQuery with expected params"""
    WazuhDBQueryVulnerability(agent_id='001', offset=500, limit=500, query='version>3.9.81')
    mock_backend.assert_called_once_with('001')
    mock_wazuhDBQuery.assert_called_once_with(
        ANY, offset=500, limit=500, table='vuln_cves', sort=None, search=None, select=None,
        fields={'name': 'name', 'version': 'version', 'architecture': 'architecture', 'cve': 'cve', 'status': 'status',
                'type': 'type', 'detection_time': 'detection_time', 'severity': 'severity',
                'cvss2_score': 'cvss2_score', 'cvss3_score': 'cvss3_score'}, filters={}, count=True, get_data=True,
        date_fields={'detection_time', 'last_partial_scan', 'last_full_scan'}, min_select_fields=set(),  distinct=False,
        default_sort_field='name', default_sort_order='ASC',  query='version>3.9.81', backend=ANY
    )
